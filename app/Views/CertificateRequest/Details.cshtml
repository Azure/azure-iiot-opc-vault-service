@model Microsoft.Azure.IIoT.OpcUa.Api.Vault.Models.CertificateRequestRecordApiModel

@{
    ViewBag.Title = "Start New Key Pair Request";
    Layout = "~/Views/Shared/_Layout.cshtml";
    Microsoft.Azure.IIoT.OpcUa.Api.Vault.Models.ApplicationRecordApiModel application = (Microsoft.Azure.IIoT.OpcUa.Api.Vault.Models.ApplicationRecordApiModel)ViewBag.Application;
}

<h2>View Certificate Request Details</h2>

<div>
    <hr />
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => application.ApplicationName)
        </dt>

        <dd>
            @Html.ActionLink(application.ApplicationName, "..\\Application\\Details", new { id = application.ApplicationId })
        </dd>

        <dt>
            @Html.DisplayNameFor(model => application.ApplicationUri)
        </dt>

        <dd>
            @Html.ActionLink(application.ApplicationUri, "..\\Application\\Details", new { id = Model.ApplicationId })
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.CertificateGroupId)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.CertificateGroupId)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.CertificateTypeId)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.CertificateTypeId)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.State)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.State)
        </dd>

        @if (Model.SubjectName != null)
        {
            <dt>
                @Html.DisplayNameFor(model => model.SubjectName)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.SubjectName)
            </dd>
        }

        @if (Model.PrivateKeyFormat != null)
        {
            <dt>
                @Html.DisplayNameFor(model => model.PrivateKeyFormat)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.PrivateKeyFormat)
            </dd>
        }
    </dl>
    <hr />
    <dl class="dl-horizontal">

        @if (Model.State == "New")
        {
            <dd>

                @Html.ActionLink("Approve", "Approve", new { id = Model.RequestId }, htmlAttributes: new { @class = "btn btn-default" })
                @Html.ActionLink("Reject", "Reject", new { id = Model.RequestId }, htmlAttributes: new { @class = "btn btn-default" })
            </dd>

        }
        @if (Model.State == "Approved" /*|| Model.State == "Accepted"*/)
        {
            <dt>Download</dt>
            <dd>
                @Html.ActionLink("Certificate", "DownloadCertificate", new { requestId = Model.RequestId, applicationId = Model.ApplicationId }, htmlAttributes: new { @class = "btn btn-default" })
                @if (!String.IsNullOrEmpty(Model.PrivateKeyFormat))
                {
                    @Html.ActionLink("PrivateKey", "DownloadPrivateKey", new { requestId = Model.RequestId, applicationId = Model.ApplicationId }, htmlAttributes: new { @class = "btn btn-default" })
                }
                @Html.ActionLink("Issuer", "DownloadIssuer", new { requestId = Model.RequestId }, htmlAttributes: new { @class = "btn btn-default" })
                @Html.ActionLink("Crl", "DownloadIssuerCrl", new { requestId = Model.RequestId }, htmlAttributes: new { @class = "btn btn-default" })
            </dd>
            <dt>Download as Base64</dt>
            <dd>
                @Html.ActionLink("Certificate", "DownloadCertificateBase64", new { requestId = Model.RequestId, applicationId = Model.ApplicationId }, htmlAttributes: new { @class = "btn btn-default" })
                @if (!String.IsNullOrEmpty(Model.PrivateKeyFormat))
                {
                    @Html.ActionLink("PrivateKey", "DownloadKeyBase64", new { requestId = Model.RequestId, applicationId = Model.ApplicationId }, htmlAttributes: new { @class = "btn btn-default" })
                }
                @Html.ActionLink("Issuer", "DownloadIssuerBase64", new { requestId = Model.RequestId }, htmlAttributes: new { @class = "btn btn-default" })
                @Html.ActionLink("Crl", "DownloadIssuerCrlBase64", new { requestId = Model.RequestId }, htmlAttributes: new { @class = "btn btn-default" })
            </dd>
        }
    </dl>

    @if (Model.State == "Approved")
    {
        <hr />
        <dl class="dl-horizontal">
            <dd>
                @if (!String.IsNullOrEmpty(Model.PrivateKeyFormat))
                {
                    @Html.ActionLink("Delete Private Key", "Accept", new { id = Model.RequestId }, htmlAttributes: new { @class = "btn btn-default" })
                }
                else
                {
                    @Html.ActionLink("Delete Certificate", "Accept", new { id = Model.RequestId }, htmlAttributes: new { @class = "btn btn-default" })
                }
            </dd>
        </dl>
    }
</div>
@if (ViewData["Message"] != null)
{
    <hr />
    <div class="alert alert-warning">
        <h4>@ViewData["Message"]</h4>
    </div>
    <hr />
}
<div class="col-md-12">
    <hr />
    @Html.ActionLink("Back to List", "Index")
    <hr />
</div>

