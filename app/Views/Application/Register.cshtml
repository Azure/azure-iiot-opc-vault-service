@model Microsoft.Azure.IIoT.OpcUa.Services.GdsVault.Api.Models.ApplicationRecordApiModel

@{
    ViewBag.Title = "Register";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Register a new Application</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    @Html.HiddenFor(model => model.ApplicationNames)
    @Html.HiddenFor(model => model.GatewayServerUri)
    @Html.HiddenFor(model => model.DiscoveryProfileUri)

    <div class="form-group">
        @Html.LabelFor(model => model.ApplicationUri, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ApplicationUri, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ApplicationUri, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ApplicationName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ApplicationName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ApplicationName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ApplicationType, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="checkbox">
                @Html.DropDownListFor(
                    model => model.ApplicationType,
                    new SelectList(
                        new List<Object>{
                            new { value = 0 , text = "Server"  },
                            new { value = 1 , text = "Client" },
                            new { value = 2 , text = "ClientAndServer" },
                            new { value = 3 , text = "DiscoveryServer"}
                        },
                    "value",
                    "text",
                    Model.ApplicationType
                    ),
                    "-select-")
                @Html.ValidationMessageFor(model => model.ApplicationType, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ProductUri, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ProductUri, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ProductUri, "", new { @class = "text-danger" })
        </div>
    </div>

    @for (int i = 0; i < Model.DiscoveryUrls.Count(); i++)
    {
    <div class="form-group">
        @Html.LabelFor(model => model.DiscoveryUrls[i], htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.HiddenFor(model => model.DiscoveryUrls[i])
            @Html.EditorFor(model => model.DiscoveryUrls[i], new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.DiscoveryUrls[i], "", new { @class = "text-danger" })
        </div>
    </div>
    }

    <div class="form-group">
        @Html.LabelFor(model => model.ServerCapabilities, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="checkbox">
                @Html.EditorFor(model => model.ServerCapabilities, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ServerCapabilities, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

