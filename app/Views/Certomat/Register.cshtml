@model Microsoft.Azure.IIoT.OpcUa.Api.Vault.Models.ApplicationRecordApiModel

@{
    ViewBag.Title = "Certomat";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Register New OPC UA Application</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <hr />

    @for (int i = 0; i < Model.ApplicationNames.Count(); i++)
    {
        @Html.HiddenFor(model => Model.ApplicationNames[i]);
        @Html.HiddenFor(model => Model.ApplicationNames[i].Text);
        @Html.HiddenFor(model => Model.ApplicationNames[i].Locale);
    }
    @Html.HiddenFor(model => model.GatewayServerUri)
    @Html.HiddenFor(model => model.DiscoveryProfileUri)

    <div class="form-group">
        @Html.LabelFor(model => model.ApplicationUri, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ApplicationUri, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ApplicationUri, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ApplicationName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ApplicationName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ApplicationName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ApplicationType, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="checkbox">
                @Html.DropDownListFor(
              model => model.ApplicationType,
              new SelectList(
                  new List<Object>{
                            new { value = 0 , text = "Server"  },
                            new { value = 1 , text = "Client" },
                            new { value = 2 , text = "ClientAndServer" },
                            new { value = 3 , text = "DiscoveryServer"}
                  },
              "value",
              "text",
              Model.ApplicationType
              ),
              "-select-")
                @Html.ValidationMessageFor(model => model.ApplicationType, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ProductUri, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ProductUri, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ProductUri, "", new { @class = "text-danger" })
        </div>
    </div>

    @for (int i = 0; i < Model.DiscoveryUrls.Count(); i++)
    {
        <div class="form-group">
            @Html.LabelFor(model => Model.DiscoveryUrls[i], htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => Model.DiscoveryUrls[i], new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => Model.DiscoveryUrls[i], "", new { @class = "text-danger" })
            </div>
        </div>
    }

    <div class="form-group">
        @Html.LabelFor(model => model.ServerCapabilities, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="checkbox">
                @Html.EditorFor(model => model.ServerCapabilities, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ServerCapabilities, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    @if (ViewData["Message"] != null)
    {
        <hr />
        <div class="alert alert-warning">
            <h4>@ViewData["Message"]</h4>
        </div>
        <hr />
    }

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" name="reg" value="Register" class="btn btn-default" />
            <input type="submit" name="add" value="Add DiscoveryUrl" class="btn btn-default" />
            <input type="submit" name="update" value="Update" class="btn btn-default" />
        </div>
    </div>
</div>
}


