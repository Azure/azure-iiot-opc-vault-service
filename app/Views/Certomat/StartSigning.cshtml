@model Microsoft.Azure.IIoT.OpcUa.Services.Vault.App.Models.StartSigningRequestUploadApiModel

@{
    ViewBag.Title = "Start Signing Request";
    Layout = "~/Views/Shared/_Layout.cshtml";
    Microsoft.Azure.IIoT.OpcUa.Api.Vault.Models.ApplicationRecordApiModel application = (Microsoft.Azure.IIoT.OpcUa.Api.Vault.Models.ApplicationRecordApiModel)ViewBag.Application;
}

<h2>Generate a new Certificate with a Signing Request</h2>


@using (Html.BeginForm("StartSigning", "Certomat", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    @Html.HiddenFor(model => model.ApiModel.ApplicationId)
    @Html.HiddenFor(model => model.ApplicationUri)
    @Html.HiddenFor(model => model.ApplicationName)
    @Html.HiddenFor(model => model.ApiModel.CertificateGroupId)
    @Html.HiddenFor(model => model.ApiModel.CertificateTypeId)

    <div class="form-group">
        <div class="col-md-2">
            @Html.LabelFor(model => model.ApplicationUri, htmlAttributes: new { @class = "pull-right" })
        </div>
        <div class="col-md-10">
            @Html.DisplayFor(model => model.ApplicationUri)
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-2">
            @Html.LabelFor(model => model.ApplicationName, htmlAttributes: new { @class = "pull-right" })
        </div>
        <div class="col-md-10">
            @Html.DisplayFor(model => model.ApplicationName)
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-2">
            @Html.LabelFor(model => model.ApiModel.CertificateGroupId, htmlAttributes: new { @class = "pull-right" })
        </div>
        <div class="col-md-10">
            @Html.DisplayFor(model => model.ApiModel.CertificateGroupId)
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-2">
            @Html.LabelFor(model => model.ApiModel.CertificateTypeId, htmlAttributes: new { @class = "pull-right" })
        </div>
        <div class="col-md-10">
            @Html.DisplayFor(model => model.ApiModel.CertificateTypeId)
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.ApiModel.CertificateRequest, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ApiModel.CertificateRequest, new { htmlAttributes = new { @class = "form-control", aria_describedby = "csr-format", placeholder = "Copy-Paste base64 encoded CSR here" } })
            @Html.ValidationMessageFor(model => model.ApiModel.CertificateRequest, "", new { @class = "text-danger" })
            <span id="csr-format">Base64 encoded Certificate Signing Request</span>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.CertificateRequestFile, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.CertificateRequestFile, new { htmlAttributes = new { @class = "form-control", aria_describedby = "csrfile-format", placeholder = "Upload your local binary CSR file here", type = "file" } })
            @Html.ValidationMessageFor(model => model.CertificateRequestFile, "", new { @class = "text-danger" })
            <!--<input type="file" name="CertificateRequestFile" id="CertificateRequestFile" />-->
            <span id="csrfile-format">Upload binary Certificate Signing Request file.</span>
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Generate New Certificate" class="btn btn-default" />
            @Html.ActionLink("Clear Form", "StartSigning", "Certomat", new { id = Model.ApiModel.ApplicationId }, new { @class = "btn btn-default" })
        </div>
    </div>
</div>
}

<div>
    <hr />
    <img src="~/images/opcvaultflowstep2.svg" alt="OpcVault Request" class="img-responsive" />
    <hr />
    @Html.ActionLink("Back to Register New", "Register", routeValues: new { id = "" })
</div>

