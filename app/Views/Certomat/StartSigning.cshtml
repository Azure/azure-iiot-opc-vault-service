@model Microsoft.Azure.IIoT.OpcUa.Services.Vault.App.Models.StartSigningRequestUploadApiModel

@{
    ViewBag.Title = "Start Signing Request";
    Layout = "~/Views/Shared/_Layout.cshtml";
    Microsoft.Azure.IIoT.OpcUa.Api.Vault.Models.ApplicationRecordApiModel application = (Microsoft.Azure.IIoT.OpcUa.Api.Vault.Models.ApplicationRecordApiModel)ViewBag.Application;
}

<h2>Generate a new Certificate with a Signing Request</h2>


@using (Html.BeginForm("StartSigning", "Certomat", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        @Html.HiddenFor(model => model.ApiModel.ApplicationId)
        @Html.HiddenFor(model => model.ApiModel.CertificateGroupId)
        @Html.HiddenFor(model => model.ApiModel.CertificateTypeId)
        @Html.HiddenFor(model => model.ApiModel.CertificateRequest)

        <div class="form-group">
            @Html.LabelFor(model => application.ApplicationName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DisplayFor(model => application.ApplicationName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => application.ApplicationName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ApiModel.ApplicationId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DisplayFor(model => model.ApiModel.ApplicationId, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ApiModel.ApplicationId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ApiModel.CertificateGroupId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DisplayFor(model => model.ApiModel.CertificateGroupId, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ApiModel.CertificateGroupId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ApiModel.CertificateTypeId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DisplayFor(model => model.ApiModel.CertificateTypeId, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ApiModel.CertificateTypeId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ApiModel.CertificateRequest, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ApiModel.CertificateRequest, new { htmlAttributes = new { @class = "form-control" } }) (base64)
                @Html.ValidationMessageFor(model => model.ApiModel.CertificateRequest, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CertificateRequestFile, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="file" name="CertificateRequestFile" id="CertificateRequestFile" />
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Generate" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to Register New", "Register")
</div>

