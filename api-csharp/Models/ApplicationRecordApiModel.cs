// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator 1.0.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.IIoT.OpcUa.Api.Vault.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    public partial class ApplicationRecordApiModel
    {
        /// <summary>
        /// Initializes a new instance of the ApplicationRecordApiModel class.
        /// </summary>
        public ApplicationRecordApiModel()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ApplicationRecordApiModel class.
        /// </summary>
        public ApplicationRecordApiModel(string applicationId = default(string), int? id = default(int?), string state = default(string), string applicationUri = default(string), string applicationName = default(string), int? applicationType = default(int?), IList<ApplicationNameApiModel> applicationNames = default(IList<ApplicationNameApiModel>), string productUri = default(string), IList<string> discoveryUrls = default(IList<string>), string serverCapabilities = default(string), string gatewayServerUri = default(string), string discoveryProfileUri = default(string))
        {
            ApplicationId = applicationId;
            Id = id;
            State = state;
            ApplicationUri = applicationUri;
            ApplicationName = applicationName;
            ApplicationType = applicationType;
            ApplicationNames = applicationNames;
            ProductUri = productUri;
            DiscoveryUrls = discoveryUrls;
            ServerCapabilities = serverCapabilities;
            GatewayServerUri = gatewayServerUri;
            DiscoveryProfileUri = discoveryProfileUri;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "applicationId")]
        public string ApplicationId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "id")]
        public int? Id { get; private set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "state")]
        public string State { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "applicationUri")]
        public string ApplicationUri { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "applicationName")]
        public string ApplicationName { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "applicationType")]
        public int? ApplicationType { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "applicationNames")]
        public IList<ApplicationNameApiModel> ApplicationNames { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "productUri")]
        public string ProductUri { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "discoveryUrls")]
        public IList<string> DiscoveryUrls { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "serverCapabilities")]
        public string ServerCapabilities { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "gatewayServerUri")]
        public string GatewayServerUri { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "discoveryProfileUri")]
        public string DiscoveryProfileUri { get; set; }

    }
}
