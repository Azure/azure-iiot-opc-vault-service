// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator 1.0.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.IIoT.OpcUa.Api.Vault.Models
{
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;
    using System.Runtime;
    using System.Runtime.Serialization;

    /// <summary>
    /// Defines values for QueryApplicationState.
    /// </summary>
    [JsonConverter(typeof(StringEnumConverter))]
    public enum QueryApplicationState
    {
        [EnumMember(Value = "any")]
        Any,
        [EnumMember(Value = "new")]
        New,
        [EnumMember(Value = "approved")]
        Approved,
        [EnumMember(Value = "rejected")]
        Rejected,
        [EnumMember(Value = "unregistered")]
        Unregistered,
        [EnumMember(Value = "deleted")]
        Deleted
    }
    internal static class QueryApplicationStateEnumExtension
    {
        internal static string ToSerializedValue(this QueryApplicationState? value)
        {
            return value == null ? null : ((QueryApplicationState)value).ToSerializedValue();
        }

        internal static string ToSerializedValue(this QueryApplicationState value)
        {
            switch( value )
            {
                case QueryApplicationState.Any:
                    return "any";
                case QueryApplicationState.New:
                    return "new";
                case QueryApplicationState.Approved:
                    return "approved";
                case QueryApplicationState.Rejected:
                    return "rejected";
                case QueryApplicationState.Unregistered:
                    return "unregistered";
                case QueryApplicationState.Deleted:
                    return "deleted";
            }
            return null;
        }

        internal static QueryApplicationState? ParseQueryApplicationState(this string value)
        {
            switch( value )
            {
                case "any":
                    return QueryApplicationState.Any;
                case "new":
                    return QueryApplicationState.New;
                case "approved":
                    return QueryApplicationState.Approved;
                case "rejected":
                    return QueryApplicationState.Rejected;
                case "unregistered":
                    return QueryApplicationState.Unregistered;
                case "deleted":
                    return QueryApplicationState.Deleted;
            }
            return null;
        }
    }
}
