// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator 1.0.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.IIoT.OpcUa.Api.Vault.Models
{
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;
    using System.Runtime;
    using System.Runtime.Serialization;

    /// <summary>
    /// Defines values for QueryApplicationType.
    /// </summary>
    [JsonConverter(typeof(StringEnumConverter))]
    public enum QueryApplicationType
    {
        [EnumMember(Value = "any")]
        Any,
        [EnumMember(Value = "server")]
        Server,
        [EnumMember(Value = "client")]
        Client,
        [EnumMember(Value = "clientAndServer")]
        ClientAndServer
    }
    internal static class QueryApplicationTypeEnumExtension
    {
        internal static string ToSerializedValue(this QueryApplicationType? value)
        {
            return value == null ? null : ((QueryApplicationType)value).ToSerializedValue();
        }

        internal static string ToSerializedValue(this QueryApplicationType value)
        {
            switch( value )
            {
                case QueryApplicationType.Any:
                    return "any";
                case QueryApplicationType.Server:
                    return "server";
                case QueryApplicationType.Client:
                    return "client";
                case QueryApplicationType.ClientAndServer:
                    return "clientAndServer";
            }
            return null;
        }

        internal static QueryApplicationType? ParseQueryApplicationType(this string value)
        {
            switch( value )
            {
                case "any":
                    return QueryApplicationType.Any;
                case "server":
                    return QueryApplicationType.Server;
                case "client":
                    return QueryApplicationType.Client;
                case "clientAndServer":
                    return QueryApplicationType.ClientAndServer;
            }
            return null;
        }
    }
}
